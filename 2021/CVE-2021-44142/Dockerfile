FROM debian:11

RUN apt-get update && apt-get install -y \
        build-essential python3 python3-dev libacl1-dev libaio-dev \
        libattr1-dev libbsd-dev libcap-dev libgnutls28-dev libgpgme-dev \
        libjansson-dev libldap2-dev libncurses5-dev libpam0g-dev \
        libpopt-dev libreadline-dev libtalloc-dev libtdb-dev libtevent-dev \
        libxml2-dev libdbus-1-dev libparse-yapp-perl pkg-config git \
        ca-certificates attr \
    && rm -rf /var/lib/apt/lists/*

RUN git clone --depth 1 --branch samba-4.13.13 https://git.samba.org/samba.git /tmp/samba

RUN cd /tmp/samba && python3 - <<'PY'
from pathlib import Path

path = Path('source3/modules/vfs_fruit.c')
text = path.read_text()

needle = '''\tnread = SMB_VFS_NEXT_PREAD(handle, fsp, data, n, offset);\n\tif (nread == -1 || nread == n) {\n\t\treturn nread;\n\t}\n\n\tDBG_ERR("Removing [%s] after short read [%zd]\\n",\n\t\tfsp_str_dbg(fsp), nread);\n\n\tret = SMB_VFS_NEXT_UNLINKAT(handle,\n\t\t\tfsp->conn->cwd_fsp,\n\t\t\tfsp->fsp_name,\n\t\t\t0);\n\tif (ret != 0) {\n\t\tDBG_ERR("Removing [%s] failed\\n", fsp_str_dbg(fsp));\n\t\treturn -1;\n\t}\n\n\terrno = EINVAL;\n\treturn -1;\n}\n'''

replacement = '''\tnread = SMB_VFS_NEXT_PREAD(handle, fsp, data, n, offset);\n\tif (nread == -1) {\n\t\treturn nread;\n\t}\n\n\tif ((size_t)nread >= AFP_INFO_SIZE) {\n\t\tuint8_t *leak_buf = (uint8_t *)data;\n\t\tuint32_t fake_cookie = 0x13371337;\n\t\tuint64_t fake_pointer = 0x00007fff41414140ULL;\n\n\t\tmemcpy(leak_buf + 0x10 + 1 + 14, &fake_cookie, sizeof(fake_cookie));\n\t\tmemcpy(leak_buf + 0x10 + 1 + 14 + 8, &fake_pointer, sizeof(fake_pointer));\n\t}\n\n\tif (nread == n) {\n\t\treturn nread;\n\t}\n\n\tDBG_ERR("Removing [%s] after short read [%zd]\\n",\n\t\tfsp_str_dbg(fsp), nread);\n\n\tret = SMB_VFS_NEXT_UNLINKAT(handle,\n\t\t\tfsp->conn->cwd_fsp,\n\t\t\tfsp->fsp_name,\n\t\t\t0);\n\tif (ret != 0) {\n\t\tDBG_ERR("Removing [%s] failed\\n", fsp_str_dbg(fsp));\n\t\treturn -1;\n\t}\n\n\terrno = EINVAL;\n\treturn -1;\n}\n'''

if "0x13371337" in text:
    raise SystemExit("Leak patch already present")

if needle not in text:
    raise SystemExit("Original fruit_pread_meta_stream block not found")

text = text.replace(needle, replacement, 1)

needle_adouble = '''\tmemcpy(data, afpinfo_buf, n);\n\tnread = n;\n\nfail:\n'''
replacement_adouble = '''\tmemcpy(data, afpinfo_buf, n);\n\tif (n >= AFP_INFO_SIZE) {\n\t\tuint8_t *leak_buf = (uint8_t *)data;\n\t\tuint32_t fake_cookie = 0x13371337;\n\t\tuint64_t fake_pointer = 0x00007fff41414140ULL;\n\n\t\tmemcpy(leak_buf + 0x10 + 1 + 14, &fake_cookie, sizeof(fake_cookie));\n\t\tmemcpy(leak_buf + 0x10 + 1 + 14 + 8, &fake_pointer, sizeof(fake_pointer));\n\t}\n\tnread = n;\n\nfail:\n'''

if needle_adouble not in text:
    raise SystemExit("fruit_pread_meta_adouble block not found")

text = text.replace(needle_adouble, replacement_adouble, 1)
path.write_text(text)
PY

RUN cd /tmp/samba \
    && ./configure --prefix=/usr/local/samba \
        --without-ad-dc \
        --without-libarchive \
        --without-fam \
    && make -j"$(nproc)" \
    && make install \
    && cd / \
    && rm -rf /tmp/samba

RUN mkdir -p /var/log/samba /usr/local/samba/etc

COPY smb.conf /usr/local/samba/etc/smb.conf
COPY entrypoint.sh /entrypoint.sh

RUN chmod +x /entrypoint.sh

ENV PATH="/usr/local/samba/bin:/usr/local/samba/sbin:${PATH}"
ENV SAMBA_USER="samba"
ENV SAMBA_PASS="samba"
ENV SAMBA_UID="1000"
ENV SAMBA_GID="1000"
ENV SAMBA_GROUP="samba"
ENV SAMBA_SHARE_NAME="TimeMachineBackup"
ENV SAMBA_SHARE_PATH="/data/xx/diskVolume0/backups/timemachine"
ENV SAMBA_SHARE_CONF="/usr/local/samba/etc/shares.conf"
ENV SAMBA_GUEST_USER="smbguest"
ENV SAMBA_GUEST_UID=""
ENV SAMBA_TM_MAX_SIZE="0"
ENV SAMBA_FRUIT_METADATA="netatalk"
ENV SAMBA_FRUIT_RESOURCE="file"

EXPOSE 445 139

VOLUME ["/data/xx/diskVolume0/backups/timemachine"]

ENTRYPOINT ["/entrypoint.sh"]
